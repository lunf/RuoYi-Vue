package ${packageName}.mapper;

import java.util.List;
import ${packageName}.domain.${ClassName};
#if($table.sub)
import ${packageName}.domain.${subClassName};
#end

/**
 * ${functionName}MapperInterface
 * 
 * @author ${author}
 * @date ${datetime}
 */
public interface ${ClassName}Mapper 
{
    /**
     * The query${functionName}
     * 
     * @param ${pkColumn.javaField} ${functionName}The key.
     * @return ${functionName}
     */
    public ${ClassName} select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaType} ${pkColumn.javaField});

    /**
     * The query${functionName}List of
     * 
     * @param ${className} ${functionName}
     * @return ${functionName}The gathering
     */
    public List<${ClassName}> select${ClassName}List(${ClassName} ${className});

    /**
     * Added${functionName}
     * 
     * @param ${className} ${functionName}
     * @return Results
     */
    public int insert${ClassName}(${ClassName} ${className});

    /**
     * Modified${functionName}
     * 
     * @param ${className} ${functionName}
     * @return Results
     */
    public int update${ClassName}(${ClassName} ${className});

    /**
     * removed${functionName}
     * 
     * @param ${pkColumn.javaField} ${functionName}The key.
     * @return Results
     */
    public int delete${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaType} ${pkColumn.javaField});

    /**
     * Mass removal.${functionName}
     * 
     * @param ${pkColumn.javaField}s The data key collection that needs to be removed
     * @return Results
     */
    public int delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaType}[] ${pkColumn.javaField}s);
#if($table.sub)

    /**
     * Mass removal.${subTable.functionName}
     * 
     * @param ${pkColumn.javaField}s The data key collection that needs to be removed
     * @return Results
     */
    public int delete${subClassName}By${subTableFkClassName}s(${pkColumn.javaType}[] ${pkColumn.javaField}s);
    
    /**
     * The mass increased.${subTable.functionName}
     * 
     * @param ${subclassName}List ${subTable.functionName}List of
     * @return Results
     */
    public int batch${subClassName}(List<${subClassName}> ${subclassName}List);
    

    /**
     * Through${functionName}Main key removed.${subTable.functionName}Information
     * 
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return Results
     */
    public int delete${subClassName}By${subTableFkClassName}(${pkColumn.javaType} ${pkColumn.javaField});
#end
}
